{"version":3,"sources":["Card.jsx","Gifimage.jsx","Gifcard.jsx","Gif.jsx","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Card","props","class","className","mess","Gifimage","style","display","marginLeft","onClick","functo","url","src","width","height","Gifcard","img","float","margin","Gif","useState","message","setmesssage","show","setshow","api","setapi","response","setresponse","allitems","setallitems","adddata","id","alert","oldata","call","e","a","target","value","fetch","reso","json","res","data","type","placeholder","onChange","marginTop","map","cvalue","images","original","webp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAUeA,EARF,SAACC,GACV,OAAQ,mCACJ,qBAAKC,MAAM,OAAX,SACK,mBAAGC,UAAU,UAAb,SAAyBF,EAAMG,YCY7BC,EAfE,SAACJ,GAMd,OACC,qBAAKK,MAAO,CAACC,QAAQ,SAASC,WAAW,QAAzC,SAEI,qBAAKC,QAPI,WACVR,EAAMS,OAAOT,EAAMU,MAMKC,IAAKX,EAAMU,IAAKL,MAAO,CAACO,MAAM,QAAQC,OAAO,cCC9DC,EAVC,SAACd,GACb,OACI,8BACI,qBAAKW,IAAKX,EAAMe,IAAKV,MAAO,CAACO,MAAM,QAAQC,OAAO,QAAQG,MAAM,QAAQC,OAAO,yBCoG5EC,EApGH,WACR,MAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoBF,oBAAS,GAA7B,mBAAMG,EAAN,KAAWC,EAAX,KACA,EAAmBJ,mBAAS,QAA5B,mBAAOK,EAAP,KAAWC,EAAX,KACA,EAA6BN,mBAAS,IAAtC,mBAAOO,EAAP,KAAgBC,EAAhB,KAKA,EAA6BR,mBAAS,CAAC,CACnCC,QAAQ,GACRV,IAAI,MAFR,mBAAOkB,EAAP,KAAgBC,EAAhB,KAKMC,EAAQ,SAACC,GACC,IAATX,GAAmB,IAAJW,EACdC,MAAM,qBAGNH,GAAY,SAACI,GACT,MAAM,GAAN,mBAAWA,GAAX,CAAkB,CAACb,QAAQA,EAAQV,IAAIqB,QAK/CV,EAAY,KAGVa,EAAI,uCAAC,WAAMC,GAAN,iBAAAC,EAAA,6DACPX,EAAOU,EAAEE,OAAOC,OADT,SAEUC,MAAM,0CAAD,OAA2Cf,EAA3C,sDAFf,cAEDgB,EAFC,gBAGQA,EAAKC,OAHb,OAGFC,EAHE,OAIRf,EAAYe,EAAIC,MAJR,2CAAD,sDASV,OACI,sBAAK1C,MAAM,WAAX,UACI,uBAAOA,MAAM,QAAQqC,MAAOlB,EAASwB,KAAM,OAAOC,YAAY,eAAeC,SAAU,SAACX,GAAD,OAAKd,EAAYc,EAAEE,OAAOC,UACjH,sBAAKjC,MAAO,CAACO,MAAM,QAAQL,WAAW,MAAMwC,UAAU,QAAtD,UACI,wBAAQvC,QAAS,kBAAIe,GAASD,IAAOjB,MAAO,CAACW,MAAM,QAAnD,iBACA,wBAAQX,MAAO,CAACW,MAAM,SAAUR,QAASsB,EAAzC,qBAGJ,uBACO,GAANR,EACA,qBAAKjB,MAAO,CAAC0C,UAAU,QAAvB,SACA,uBAAOT,MAAOd,EAAKvB,MAAM,WAAW2C,KAAK,OAAOC,YAAY,aAAaC,SAAUZ,MAChF,KAIP,sBAAK7B,MAAO,CAACC,QAAQ,OAAOyC,UAAU,QAAtC,UAGA,qBAAK1C,MAAO,CAACC,QAAQ,UAArB,SAERoB,EAASsB,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,CAAUvC,IAAKuC,EAAOC,OAAOC,SAASC,KAAM3C,OAAQqB,SAKrDF,EAASoB,KAAI,SAACC,GACX,MAAmB,IAAhBA,EAAO7B,QAUA,cAAC,EAAD,CAAMjB,KAAM8C,EAAO7B,UATX,IAAZ6B,EAAOvC,IAIC,cAAC,EAAD,CAASK,IAAKkC,EAAOvC,WAJhC,YCvED,I,MCwBA2C,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86fb717b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => {\r\n    return (<>\r\n        <div class=\"card\">\r\n             <p className=\"message\" >{props.mess}</p>\r\n         </div>\r\n    </>)\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react'\r\n\r\nconst Gifimage = (props) => {\r\n\r\n    const callgif=()=>{\r\n        props.functo(props.url)\r\n    }\r\n\r\n    return (\r\n     <div style={{display:'inline',marginLeft:'10px'}}>\r\n         \r\n         <img onClick={callgif} src={props.url} style={{width:'100px',height:'100px'}}/>\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Gifimage\r\n","import React from 'react'\r\n\r\nconst Gifcard = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={props.img} style={{width:'150px',height:'100px',float:'right',margin:'10px 5px 0px 0px'}}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Gifcard\r\n","import React,{useState,useEffect} from 'react';\r\nimport Card from \"./Card\";\r\nimport Gifimage from \"./Gifimage\";\r\nimport Gifcard from \"./Gifcard\";\r\n\r\nconst Gif = () => {\r\n    const [message,setmesssage]=useState();\r\n    const[show,setshow]=useState(false);\r\n    const [api,setapi]=useState('jump');\r\n    const [response,setresponse]=useState([]);\r\n    \r\n\r\n    \r\n\r\n    const [allitems,setallitems]=useState([{\r\n        message:'',\r\n        url:''\r\n    }]);\r\n\r\n    const adddata=(id)=>{\r\n        if(message=='' && id==''){\r\n            alert('Type the message!')\r\n        }\r\n        else{\r\n            setallitems((oldata)=>{\r\n                return([...oldata,{message:message,url:id}])\r\n            })\r\n        }\r\n     \r\n\r\n        setmesssage(\"\");\r\n    }\r\n\r\n    const call=async(e)=>{\r\n        setapi(e.target.value)\r\n        const reso=await fetch(`https://api.giphy.com/v1/gifs/search?q=${api}&api_key=cHyLZyf4kJrpa47hQB3BgoGfyt4r47LD&limit=5`);\r\n       const res=await reso.json();\r\n       setresponse(res.data);\r\n    }\r\n\r\n\r\n \r\n    return (\r\n        <div class=\"main_div\">\r\n            <input class=\"input\" value={message} type =\"text\" placeholder=\"type message\" onChange={(e)=>setmesssage(e.target.value)} /> \r\n            <div style={{width:'300px',marginLeft:'37%',marginTop:'30px'}}>\r\n                <button onClick={()=>setshow(!show)} style={{float:'left'}}>GIF</button>\r\n                <button style={{float:'right'}} onClick={adddata}>POST</button>\r\n                \r\n            </div>  \r\n            <br/>\r\n            {show==true?\r\n             <div style={{marginTop:'50px'}}>\r\n             <input value={api} class=\"gifinput\" type=\"text\" placeholder=\"Search GIF\" onChange={call}/>\r\n         </div>:null}\r\n\r\n\r\n         \r\n         <div style={{display:'grid',marginTop:'30px'}}>\r\n\r\n             \r\n         <div style={{display:'inline'}}>\r\n\r\n{response.map((cvalue)=>{\r\n    return(<Gifimage url={cvalue.images.original.webp} functo={adddata}/>)\r\n})}\r\n\r\n</div>\r\n\r\n         {allitems.map((cvalue)=>{\r\n             if(cvalue.message==''){\r\n                if(cvalue.url==''){\r\n\r\n                }\r\n                else{\r\n                    return(<Gifcard img={cvalue.url}/>)\r\n                }\r\n\r\n             }\r\n             else{\r\n                return(<Card mess={cvalue.message}/>)\r\n             }\r\n           \r\n         })}\r\n         \r\n\r\n        \r\n         \r\n\r\n        \r\n\r\n\r\n\r\n         </div>\r\n            \r\n        </div>\r\n\r\n\r\n// cHyLZyf4kJrpa47hQB3BgoGfyt4r47LD\r\n\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default Gif\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Gif from './Gif';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Gif/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}